/*
 |--------------------------------------------------------------------------
 | This file contains examples of how to use this plugin
 |--------------------------------------------------------------------------
 |
 | To see what the documents generated by these examples looks like you can open
 | ´examples.html´ or go to http://simonbengtsson.github.io/jsPDF-AutoTable.
 |
 | To make it possible to view each example in examples.html some extra code
 | is added to the examples below. For example they return their jspdf
 | doc instance and gets generated data from the library faker.js. See simple.html
 | for a minimal example.
 */

function PropColorRGB(config,idvalor,defecto){
    rgb = PropText(config,idvalor,defecto);
    rgb = rgb.replace(/[^\d,]/g, '').split(',');
    return rgb.map(Number);
}

function PropText(config,idvalor,defecto){
    valor = config.filter(function(propiedad) {
        return  (propiedad.idpropiedad == idvalor);
    });
    return ((valor.length>0)&&(valor[0].valor !==undefined))?valor[0].valor:defecto;    
}

function PropBoolean(config,idvalor,defecto){
    bool = PropText(config,idvalor,defecto);
    return (bool == 1);
}


var boletas = {};

(function(API){
    API.centerText = function(text, style,width, x, y) {
        this.setFontStyle(style);
        var fontSize = this.internal.getFontSize();
        txtWidth = this.getStringUnitWidth(text)*fontSize/this.internal.scaleFactor;
        this.text(text,x+( width - txtWidth ) / 2, y);
    }
})(jsPDF.API);

(function(API){
    API.rightText = function(text, style, x, y) {
        this.setFontStyle(style);
        var fontSize = this.internal.getFontSize();
        txtWidth = this.getStringUnitWidth(text)*fontSize/this.internal.scaleFactor;
        this.text(text,x-txtWidth, y);
    }
})(jsPDF.API);

(function(API){
    API.leftText = function(text, style, x, y) {
        this.setFontStyle(style);
        this.text(text,x, y);
    }
})(jsPDF.API);


function addWaterMark(doc) {
    var totalPages = doc.internal.getNumberOfPages();
  
    for (i = 1; i <= totalPages; i++) {
      doc.setPage(i);
      //doc.addImage(imgData, 'PNG', 40, 40, 75, 75);
      doc.setTextColor(150);
      doc.text(50, doc.internal.pageSize.height - 30, 'Watermark');
    }
  
    return doc;
  }

function grafico(numero,datos,config){
    /*var canvas = document.createElement('canvas');
    canvas.id = "#graphUltimos%s".format(numero);
    canvas.width = 1224;
    canvas.height = 768;
    canvas.style.zIndex = 8;
    canvas.style.position = "absolute";
    canvas.style.border = "1px solid";
    var body = document.getElementsByTagName("body")[0];
    body.appendChild(canvas);*/

    var canvas = $("#grafico");    

    var barChartData = {
        labels: [],
        datasets: [{
            borderWidth: 1,
            data: [],
            yAxisID: "y-axis-1",
        }]
    };
    barGraphUltimos= new Chart(canvas, {
        type: 'bar',
        data: barChartData,

        options: {

            legend: {
                display:false,
                position: 'top',
            },
            scales: {
                yAxes: [ {
                    type: "linear", // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance
                    display: true,
                    position: "left",
                    id: "y-axis-1",
                    scaleLabel: {
                        display: true,
                        labelString: 'Energia kWh'
                    },
                    ticks: {
                        beginAtZero: true,
                        callback: function(value, index, values) {
                            return value.toLocaleString();
                        }
                    },
                    // grid line settings
                    gridLines: {
                        drawOnChartArea: false, // only want the grid lines for one axis to show up
                    },
                }]
            },
            plugins: {
                labels: false,
                datalabels: {
                    display: function(context) {
                        return false;
                    },
                }   
            },
            animation: {
                duration: 0,
                onComplete: function () {
                    var chartInstance = this.chart,
                        ctx = chartInstance.ctx;
                    ctx.textAlign = 'center';
                    ctx.fillStyle = "rgba(0, 0, 0, 1)";
                    ctx.textBaseline = 'bottom';

                    this.data.datasets.forEach(function (dataset, i) {
                        var meta = chartInstance.controller.getDatasetMeta(i);
                        meta.data.forEach(function (bar, index) {
                            var data = dataset.data[index];
                            if (data != 0) {
                                ctx.fillText(data.toLocaleString(), bar._model.x, bar._model.y - 5);
                            }
                        });
                    });
                }
            }

        }
    });

    var arrLabels = [];
    var arrDatosEnergia = [];
    var arrColorEnergia = [];
    var arrColorBorde   = [];
    var max = 0;
    for (var dataIndex in datos){
        arrLabels.push(datos[dataIndex].nombremes);
        max = (parseFloat(datos[dataIndex].consumo)>max)?parseFloat(datos[dataIndex].consumo):max;
        arrDatosEnergia.push(parseFloat(datos[dataIndex].consumo));
        colorRelleno = config.filter(function(propiedad) {
                            return  (propiedad.idpropiedad == 2);
                        });
        colorBorder  = config.filter(function(propiedad) {
                            return  (propiedad.idpropiedad == 3);
                        });             
        arrColorEnergia.push(((colorRelleno.length>0)&&(colorRelleno[0].valor !==undefined))?colorRelleno[0].valor:"rgb(156,110,190,0.4)");
        arrColorBorde.push(((colorBorder.length>0)&&(colorBorder[0].valor !== undefined))?colorBorder[0].valor:"rgb(70,30,100)");
    }

    barGraphUltimos.data.labels = arrLabels;
    barGraphUltimos.data.datasets[0].data = arrDatosEnergia;
    barGraphUltimos.data.datasets[0].backgroundColor = arrColorEnergia;
    barGraphUltimos.data.datasets[0].borderColor = arrColorBorde;
    var maximo = roundup(max);
    barGraphUltimos.options.scales.yAxes[0].ticks.max = maximo; 
    barGraphUltimos.options.scales.yAxes[0].ticks.stepSize =  (maximo / 5);
    barGraphUltimos.options.scales.yAxes[0].ticks.fontSize = 25;
    barGraphUltimos.options.scales.xAxes[0].ticks.fontSize = 25;
    barGraphUltimos.update();


    //imgCanvas = canvas.toDataURL("image/png");
    imgCanvas = barGraphUltimos.toBase64Image();
    return imgCanvas;
}


boletas.detallada = function(){
    data = arguments[0];
    config = arguments[1];
    showCargos = arguments[2];
    var nuevaPagina = false;
    var doc = new jsPDF({
        orientation: 'landscape',
        unit: 'pt',
        format:'letter'
    });
    data.forEach(function(value,index){
        if (nuevaPagina){
            doc.addPage();
        }
        startX = 30;
        startY = 30;

        //Banner
        headerSrc = PropText(config,10,null);
        if (headerSrc != null) {
            headerImg = new Image();
            headerImg.src = headerSrc;
            doc.addImage(headerImg,'PNG',startX,startY-10,doc.internal.pageSize.getWidth()-60,220);
        }
        //LOGO del Edificio
        
        var logo = new Image();
        logo.src = PropText(config,9,'images/logos/logo%s.png'.format(value.edificio.idedificio));
        doc.addImage(logo, 'PNG', startX,startY,148,76);

        incluirIVA = PropBoolean(config,28,0);
        ivaCargos =  (value.edificio.ivaCargos == 't');


        //Informacion de la Empresa
        doc.setFontSize(10);
        doc.setFontStyle('normal');
        titleEdificio = PropText(config,18,value.edificio.nombre);
        doc.text(titleEdificio, startX+10, startY+=10+76);

        viewRutIzquierdo = PropBoolean(config,21,1);
        if (viewRutIzquierdo) {
            doc.setFontStyle('bold');
            doc.text("RUT: ", startX+10, startY+=12);
            doc.setFontStyle('normal');
            doc.text(value.edificio.rut, 12+startX+doc.getStringUnitWidth("RUT:")*doc.internal.getFontSize()/doc.internal.scaleFactor, startY);
        }
        doc.text(value.edificio.direccion, startX+10, startY+=12);
        //doc.text(data.edificio.email, startX, startY+=12);
        //doc.text(data.edificio.telf, startX, startY+=12);

        doc.setLineWidth(1.5);
        doc.rect(doc.internal.pageSize.getWidth()-200, 30, 160, 50);
        viewRutDerecho = PropBoolean(config,16,1);
        if (viewRutDerecho) {
            doc.centerText("RUT: "+value.edificio.rut,"bold",160,doc.internal.pageSize.getWidth()-200,45);
        }

        tituloTipoBoleta = PropText(config,17,'BOLETA INFORMATIVA');

        doc.centerText(tituloTipoBoleta,"bold",160,doc.internal.pageSize.getWidth()-200,60);
        doc.centerText("N° "+value.boleta.numero,"bold",160,doc.internal.pageSize.getWidth()-200,75);
    
        colorClienteBox = PropColorRGB(config,12,"rgb(196,196,196)");
        doc.setFillColor(colorClienteBox[0],colorClienteBox[1],colorClienteBox[2]);
        doc.setDrawColor(colorClienteBox[0],colorClienteBox[1],colorClienteBox[2]);
        doc.rect(doc.internal.pageSize.getWidth()-200, 100, 80, 20, 'FD');
        ColorFontTitleNumCliente = PropColorRGB(config,13,"rgb(0,0,0)");
        doc.setTextColor(ColorFontTitleNumCliente[0],ColorFontTitleNumCliente[1],ColorFontTitleNumCliente[2]); 
        doc.centerText("N° Cliente:","bold",80,doc.internal.pageSize.getWidth()-200,113);
        doc.setDrawColor(colorClienteBox[0],colorClienteBox[1],colorClienteBox[2]);
        ColorFontValueNumCliente = PropColorRGB(config,14,"rgb(0,0,0)");
        doc.setFillColor(255);
        doc.setTextColor(ColorFontValueNumCliente[0],ColorFontValueNumCliente[1],ColorFontValueNumCliente[2]);
        doc.rect(doc.internal.pageSize.getWidth()-120, 100, 80, 20, 'FD')
        doc.centerText(value.boleta.cliente.idasignacion,"bold",80,doc.internal.pageSize.getWidth()-120,113);
        doc.setTextColor(0,0,0); 
        doc.centerText("Fecha Emisión:","bold",80,doc.internal.pageSize.getWidth()-200,135);
        doc.centerText(value.boleta.fecha,"normal",80,doc.internal.pageSize.getWidth()-120,135);
    
        doc.setLineWidth(0.1)
        doc.setDrawColor(0, 0, 0);
    
        doc.setLineDash([1.4])
        doc.line(startX, 145, doc.internal.pageSize.getWidth()-30, 145);
        doc.line(startX, 240, doc.internal.pageSize.getWidth()-30, 240);

        doc.setFontSize(10);
        doc.
        setFontStyle('normal');
        startY = 165;
        doc.text("Sres. "+value.boleta.cliente.nombre, startX+10, startY);
        viewTarifa = PropBoolean(config,15,1);
        if (viewTarifa) {
            doc.setFontStyle('bold');
            doc.text("Tarifa: ", startX+400, startY);
            doc.setFontStyle('normal');
            doc.text(value.boleta.cliente.tarifa, startX+450, startY);
        }    
        doc.setFontStyle('bold');
        doc.text("Dirección de Envio: ", startX+10, startY+=15);
        doc.setFontStyle('normal');
        doc.text(value.boleta.cliente.direccion, startX+120, startY);
        doc.setFontStyle('bold');
        doc.text("Medidor: ", startX+400, startY);
        doc.setFontStyle('normal');
        doc.text(value.boleta.cliente.codigo, startX+450, startY);
        doc.setFontStyle('bold');
        doc.text("RUT: ", startX+10, startY+=15);
        doc.setFontStyle('normal');
        doc.text(value.boleta.cliente.rut, startX+70, startY);
        doc.setFontStyle('bold');
        doc.text("Espacio: ", startX+10, startY+=15);

        viewLogoDerecho = PropBoolean(config,19,0);
        if (viewLogoDerecho) {
            var logoDerecho = new Image();
            logoDerecho.src = PropText(config,20,'images/logos/logo%s.png'.format(value.edificio.idedificio));
            doc.addImage(logoDerecho, 'PNG', doc.internal.pageSize.getWidth()-120,startY,80,20);            
        }
        doc.setFontStyle('normal');
        doc.text(value.boleta.cliente.espacio, startX+70, startY);
        doc.setFontSize(16);
        //doc.centerText("¿Cuanto debo?","normal",200,30,startY+=60);
        doc.setFontSize(14);
        doc.setFontStyle('bold');
        doc.text("Total a Pagar", startX+320, startY+=50);
        doc.rightText("CLP "+formatear_valor(!(ivaCargos)?Math.round(value.boleta.total*1.19,2):Math.round(value.boleta.total,2),'float8',true,0).value,"bold",doc.internal.pageSize.getWidth()-30, startY);
        doc.setFontSize(10);
        doc.text("Periodo:",startX+320, startY+15);
        doc.setFontSize(10);
        doc.setFontStyle('normal');
        doc.text("%s al %s".format(value.boleta.desde,value.boleta.hasta),startX+365, startY+15);

        let cols = [{col2: 'Name', col3: 'Email', col4: 'City', col5: 'Sum'}];
        let foot = [{col2: 'Name', col3: 'Email', col4: 'City', col5: 'Sum'}];
        cols[0]['col2'] = {content: 'Datos de Lecturas', colSpan: 4, styles: {halign: 'center'}};
        foot[0]['col2'] = {content: '', colSpan: 4, styles: {halign: 'center'}};
        colorSupBoxLecturas = PropColorRGB(config,6,'rgb(160,160,160)');    
        colorInfBoxLecturas = PropColorRGB(config,7,'rgb(160,160,160)');
        colorIntBoxLecturas = PropColorRGB(config,8,'rgb(190,190,190)');
        colorFontHeaderLecturas = PropColorRGB(config,22,'rgb(0,0,0)');
        
        doc.autoTable({
            startX:startX,
            startY: 290,
            head: cols,
            foot:foot,
            body: value.boleta.lecturas,
            columnStyles: {
    
                col2: {fillColor: colorIntBoxLecturas, textColor: 0, fontStyle: 'bold',cellWidth:100},
                col3: {fillColor: colorIntBoxLecturas,cellWidth:100},
                col4: {fillColor: colorIntBoxLecturas, textColor: 0, fontStyle: 'bold',cellWidth:140},
                col5: {fillColor: colorIntBoxLecturas,cellWidth:100},
    
            },
            styles: {cellPadding: 1, fontSize: 10},
            headStyles: {
                fillColor: colorSupBoxLecturas,
                textColor: colorFontHeaderLecturas,
                fontSize: 10
            },
            footStyles: {
                fillColor: colorInfBoxLecturas,
                textColor: 0,
                fontSize: 10
            },
            theme: 'plain'
        });    

        doc.setLineDash(0);
        doc.setFillColor(255);
        doc.setDrawColor(196,196,196);
        var width = (doc.internal.pageSize.getWidth()-80) / 2;
        doc.rect(40, doc.previousAutoTable.finalY, width , 170, 'FD'); 
        doc.rect(40+width, doc.previousAutoTable.finalY, width, 170, 'FD');
        colorSupBoxCargos = PropColorRGB(config,4,"rgb(162,193,205)");
        doc.setFillColor(colorSupBoxCargos[0],colorSupBoxCargos[1],colorSupBoxCargos[2]);
        doc.setDrawColor(colorSupBoxCargos[0],colorSupBoxCargos[1],colorSupBoxCargos[2]);
        doc.rect(40, doc.previousAutoTable.finalY, width , 15, 'FD');

        colorSupBoxBarra = PropColorRGB(config,11,"rgb(162,193,205)");
        doc.setFillColor(colorSupBoxBarra[0],colorSupBoxBarra[1],colorSupBoxBarra[2]);
        doc.setDrawColor(colorSupBoxBarra[0],colorSupBoxBarra[1],colorSupBoxBarra[2]);
        doc.rect(doc.internal.pageSize.getWidth() - (doc.internal.pageSize.getWidth() / 2), doc.previousAutoTable.finalY, width , 15, 'FD');

        colorInfBoxCargos = PropColorRGB(config,5,"rgb(162,193,205)");
        if (showCargos){
            colorFontHeaderCargos = PropColorRGB(config,23,'rgb(0,0,0)');
            doc.setTextColor(colorFontHeaderCargos[0],colorFontHeaderCargos[1],colorFontHeaderCargos[2]); 
            doc.setFillColor(colorInfBoxCargos[0],colorInfBoxCargos[1],colorInfBoxCargos[2]);
            doc.setDrawColor(colorInfBoxCargos[0],colorInfBoxCargos[1],colorInfBoxCargos[2]);
            doc.rect(40, doc.previousAutoTable.finalY+125, width , 45, 'FD');
            doc.leftText('Descripción del Cargo','bold',45,doc.previousAutoTable.finalY+10);
        }

        colorFontHeaderHistorial = PropColorRGB(config,25,'rgb(0,0,0)');
        doc.setTextColor(colorFontHeaderHistorial[0],colorFontHeaderHistorial[1],colorFontHeaderHistorial[2]); 
        viewGrafico = PropBoolean(config,26,1);
        if (viewGrafico) {
            doc.rightText('Historial de Consumo (kWh)','bold',doc.internal.pageSize.getWidth()-40,doc.previousAutoTable.finalY+10);
        }     

        if (showCargos){
            colorFontHeaderCargos = PropColorRGB(config,23,'rgb(0,0,0)');
            doc.setTextColor(colorFontHeaderCargos[0],colorFontHeaderCargos[1],colorFontHeaderCargos[2]); 
            doc.rightText('Valor (CLP)','bold',35+width,doc.previousAutoTable.finalY+10);
        }

        colorFontHeaderCargos = PropColorRGB(config,24,'rgb(0,0,0)');
        doc.setTextColor(colorFontHeaderCargos[0],colorFontHeaderCargos[1],colorFontHeaderCargos[2]); 

        console.log('Incluir IVA:'+incluirIVA);
        console.log('Iva Cargos:'+ivaCargos);
        let neto = 0;
        let total = 0;
        let facturados = [];
        if (incluirIVA){
            if (ivaCargos){
                value.boleta.facturados = value.boleta.facturados.map(function(element){
                    element.monto = formatear_valor(Math.round(element.monto/1.19),'float8',true,0).value; 
                    return element;
                });
                neto = Math.round(value.boleta.total/1.19);
                total = value.boleta.total;
            }
            else {
                value.boleta.facturados = value.boleta.facturados.map(function(element){
                    element.monto = formatear_valor(Math.round(element.monto),'float8',true,0).value;
                    return element;
                });
                neto = Math.round(value.boleta.total);
                total = neto + Math.round(neto*0.19);
            }
        }
        else {
            if (ivaCargos){
                value.boleta.facturados = value.boleta.facturados.map(function(element){
                    element.monto = formatear_valor(Math.round(element.monto),'float8',true,0).value;
                    return element;
                });
                neto = value.boleta.total;
                total = value.boleta.total;
            }
            else {
                value.boleta.facturados = value.boleta.facturados.map(function(element){
                    element.monto = formatear_valor(Math.round(element.monto*1.19),'float8',true,0).value;
                    return element;
                });
                neto = Math.round(value.boleta.total*1.19);
                total = neto;
            }
        }

        if (incluirIVA){
            doc.leftText('Total sin Iva','bold',45,doc.previousAutoTable.finalY+135);
            doc.rightText('CLP '+formatear_valor(neto,'float8',true,0).value,'bold',35+width,doc.previousAutoTable.finalY+135);
            doc.leftText('Monto IVA (19%)','bold',45,doc.previousAutoTable.finalY+150);
            doc.rightText('CLP '+formatear_valor(Math.round(neto*0.19),'float8',true,0).value,'bold',35+width,doc.previousAutoTable.finalY+150);
        }
        doc.leftText('Total','bold',45,doc.previousAutoTable.finalY+165);
        doc.rightText('CLP '+formatear_valor(total,'float8',true,0).value,'bold',35+width,doc.previousAutoTable.finalY+165);
    

        doc.setLineWidth(0.1)
        doc.setDrawColor(0, 0, 0);
    
        doc.setLineDash([1.4])
        doc.line(startX, doc.internal.pageSize.getHeight()-30, doc.internal.pageSize.getWidth()-30, doc.internal.pageSize.getHeight()-30);
        doc.setFontSize(6);
        doc.rightText('Generado por Ribex v1.2, propiedad de Ribé Ingeniería','normal',doc.internal.pageSize.getWidth()-30,doc.internal.pageSize.getHeight()-20);
    

            startY = doc.previousAutoTable.finalY+20;
            graphY = doc.previousAutoTable.finalY+25;
        


            //value.boleta.facturados = value.boleta.facturados.map(function(element){
                //element.monto = parseFloat(element.monto)*1.19
                    //element.monto = formatear_valor(((!(ivaCargos)) && (incluirIVA)) ?Math.round(element.monto*1.19):Math.round(element.monto),'float8',true,0).value;

                    //element.monto = formatear_valor((incluirIVA && ivaCargos)?Math.round(element.monto/1.19):Math.round(element.monto),'float8',true,0).value;
                    //return element;
            //})


        if (showCargos){
            cols = [{cargo: 'Descripción del Cargo', monto:{content:"Monto CLP",styles:{halign:"right"}}}];
            doc.autoTable({
                startX: 50,
                startY: startY,
                margin: {right: (doc.internal.pageSize.getWidth() / 2)+5},
                body: value.boleta.facturados,
                columnStyles: {
                    cargo:{fontStyle:"bold"},
                    monto:{halign:"right",cellWidth:100},
                },
                styles: {
                    cellPadding: 1, 
                    fontSize: 10,
                },
                theme: 'plain'
            });
        }


        if (viewGrafico) {
            var imagen = grafico(value.boleta.numero,value.boleta.anteriores,config);
            doc.addImage(imagen,'PNG',doc.internal.pageSize.getWidth() / 2,graphY,doc.internal.pageSize.getWidth() - (doc.internal.pageSize.getWidth() / 2) - 40,doc.internal.pageSize.getHeight()-graphY-85,undefined,'FAST');
        }

        nuevaPagina = true;
    });
    return doc;    
}

boletas.simple = function(){

    data = arguments[0];
    config = arguments[1];
    var nuevaPagina = false;
    var doc = new jsPDF({
        orientation: 'landscape',
        unit: 'pt',
        format:'letter'
    });
    data.forEach(function(value,index){
        if (nuevaPagina){
            doc.addPage();
        }
        startX = 30;
        startY = 30;
        //LOGO del Edificio
        var logo = new Image();
        logo.src = 'images/logos/logo%s.png'.format(value.edificio.idedificio);
        doc.addImage(logo, 'PNG', startX,startY,148,76);
        //Informacion de la Empresa
        doc.setFontSize(10);
        doc.setFontStyle('normal');
        doc.text(value.edificio.nombre, startX, startY+=10+76);
        doc.setFontStyle('bold');
        doc.text("RUT: ", startX, startY+=12);
        doc.setFontStyle('normal');
        doc.text(value.edificio.rut, startX+doc.getStringUnitWidth("RUT:")*doc.internal.getFontSize()/doc.internal.scaleFactor, startY);
        doc.text(value.edificio.direccion, startX, startY+=12);
        //doc.text(data.edificio.email, startX, startY+=12);
        //doc.text(data.edificio.telf, startX, startY+=12);

        doc.setLineWidth(1.5);
        doc.rect(doc.internal.pageSize.getWidth()-200, 30, 160, 50);
        viewRutDerecho = PropBoolean(config,16,1);
        if (viewRutDerecho) {
            doc.centerText("RUT: "+value.edificio.rut,"bold",160,doc.internal.pageSize.getWidth()-200,45);
        }
        tituloTipoBoleta = PropText(config,17,'BOLETA INFORMATIVA');
        doc.centerText(tituloTipoBoleta,"bold",160,doc.internal.pageSize.getWidth()-200,60);
        doc.centerText("N° "+value.boleta.numero,"bold",160,doc.internal.pageSize.getWidth()-200,75);
    
        
        doc.setFillColor(196,196,196);
        doc.setDrawColor(196,196,196);
        doc.rect(doc.internal.pageSize.getWidth()-200, 100, 80, 20, 'FD'); 
        doc.centerText("N° Cliente:","bold",80,doc.internal.pageSize.getWidth()-200,113);
        doc.setDrawColor(196,196,196);
        doc.setFillColor(255);
        doc.rect(doc.internal.pageSize.getWidth()-120, 100, 80, 20, 'FD')
        doc.centerText(value.boleta.cliente.idasignacion,"bold",80,doc.internal.pageSize.getWidth()-120,113);
    
        doc.centerText("Fecha Emisión:","bold",80,doc.internal.pageSize.getWidth()-200,135);
        doc.centerText(value.boleta.fecha,"normal",80,doc.internal.pageSize.getWidth()-120,135);
    
        doc.setLineWidth(0.1)
        doc.setDrawColor(0, 0, 0);
    
        doc.setLineDash([1.4])
        doc.line(startX, 145, doc.internal.pageSize.getWidth()-30, 145);
        doc.line(startX, 240, doc.internal.pageSize.getWidth()-30, 240);

        doc.setFontSize(10);
        doc.setFontStyle('normal');
        startY = 165;
        doc.text("Sres. "+value.boleta.cliente.nombre, startX+10, startY);
        doc.setFontStyle('bold');
        doc.text("Medidor: ", startX+400, startY);
        doc.setFontStyle('normal');
        doc.text(value.boleta.cliente.codigo, startX+450, startY);
        doc.setFontStyle('bold');
        doc.text("Dirección de Envio: ", startX+10, startY+=15);
        doc.setFontStyle('normal');
        doc.text(value.boleta.cliente.direccion, startX+120, startY);
        doc.setFontStyle('bold');
        //doc.text("Medidor: ", startX+400, startY);
        //doc.setFontStyle('normal');
        //doc.text(value.boleta.cliente.codigo, startX+450, startY);
        doc.setFontStyle('bold');
        doc.text("R.U.T:: ", startX+10, startY+=15);
        doc.setFontStyle('normal');
        doc.text(value.boleta.cliente.rut, startX+70, startY);
        doc.setFontStyle('bold');
        doc.text("Espacio: ", startX+10, startY+=15);
        doc.setFontStyle('normal');
        doc.text(value.boleta.cliente.espacio, startX+70, startY);
        doc.setFontSize(16);
        //doc.centerText("¿Cuanto debo?","normal",200,30,startY+=60);
        doc.setFontSize(14);
        doc.setFontStyle('bold');
        doc.text("Total a Pagar", startX+320, startY+=50);
        doc.rightText("CLP "+formatear_valor(Math.round(value.boleta.total*1.19,2),'float8',true,0).value,"bold",doc.internal.pageSize.getWidth()-30, startY);
        doc.setFontSize(10);
        doc.text("Periodo:",startX+320, startY+15);
        doc.setFontSize(10);
        doc.setFontStyle('normal');
        doc.text("%s al %s".format(value.boleta.desde,value.boleta.hasta),startX+365, startY+15);

        let cols = [{col2: 'Name', col3: 'Email', col4: 'City', col5: 'Sum'}];
        let foot = [{col2: 'Name', col3: 'Email', col4: 'City', col5: 'Sum'}];
        cols[0]['col2'] = {content: 'Datos de Lecturas', colSpan: 4, styles: {halign: 'center'}};
        foot[0]['col2'] = {content: '', colSpan: 4, styles: {halign: 'center'}};
        
        value.boleta.lecturas[0].col4 = '';
        value.boleta.lecturas[0].col5 = '';
        doc.autoTable({
            startX:startX,
            startY: 290,
            head: cols,
            foot:foot,
            body: value.boleta.lecturas,
            columnStyles: {
    
                col2: {fillColor: [190,190,190], textColor: 0, fontStyle: 'bold',cellWidth:100},
                col3: {cellWidth:100},
                col4: {fillColor: [190,190,190], textColor: 0, fontStyle: 'bold',cellWidth:140},
                col5: {cellWidth:100},
    
            },
            styles: {cellPadding: 1, fontSize: 10},
            headStyles: {
                fillColor: [160,160,160],
                textColor: 0,
                fontSize: 10
            },
            footStyles: {
                fillColor: [160,160,160],
                textColor: 0,
                fontSize: 10
            },
            theme: 'plain'
        });    

        doc.setLineDash(0);
        doc.setFillColor(255);
        doc.setDrawColor(196,196,196);
        var width = (doc.internal.pageSize.getWidth()-80) / 2;
        doc.rect(40, doc.previousAutoTable.finalY, width , 170, 'FD'); 
        doc.rect(40+width, doc.previousAutoTable.finalY, width, 170, 'FD');
        doc.setFillColor(162,193,205);
        doc.setDrawColor(162,193,205);
        doc.rect(40, doc.previousAutoTable.finalY, width , 15, 'FD');
        doc.rect(40, doc.previousAutoTable.finalY+125, width , 45, 'FD');
        //doc.leftText('Descripción del Cargo','bold',45,doc.previousAutoTable.finalY+10); 
        //doc.rightText('Valor ($)','bold',35+width,doc.previousAutoTable.finalY+10);

        doc.leftText('Total sin Iva','bold',45,doc.previousAutoTable.finalY+135);
        doc.rightText('CLP '+formatear_valor(value.boleta.total,'float8',true,0).value,'bold',35+width,doc.previousAutoTable.finalY+135);
        doc.leftText('Monto IVA (19%)','bold',45,doc.previousAutoTable.finalY+150);
        doc.rightText('CLP '+formatear_valor(Math.round(value.boleta.total*0.19),'float8',true,0).value,'bold',35+width,doc.previousAutoTable.finalY+150);
        doc.leftText('Total + IVA','bold',45,doc.previousAutoTable.finalY+165);
        doc.rightText('CLP '+formatear_valor(Math.round(value.boleta.total*1.19),'float8',true,0).value,'bold',35+width,doc.previousAutoTable.finalY+165);
    
        doc.setLineWidth(0.1)
        doc.setDrawColor(0, 0, 0);
    
        doc.setLineDash([1.4])
        doc.line(startX, doc.internal.pageSize.getHeight()-30, doc.internal.pageSize.getWidth()-30, doc.internal.pageSize.getHeight()-30);
        doc.setFontSize(6);
        doc.rightText('Generado por Ribex v1.2, propiedad de Ribé Ingeniería','normal',doc.internal.pageSize.getWidth()-30,doc.internal.pageSize.getHeight()-20);
    
    
        cols = [{cargo: 'Descripción del Cargo', monto:{content:"Monto CLP",styles:{halign:"right"}}}];
    
        startY = doc.previousAutoTable.finalY+20;
        graphY = doc.previousAutoTable.finalY+10;

        viewGrafico = PropBoolean(config,26,1);
        if (viewGrafico) {
            var imagen = grafico(value.boleta.numero,value.boleta.anteriores,config);
            doc.addImage(imagen,'PNG',doc.internal.pageSize.getWidth() / 2,graphY,doc.internal.pageSize.getWidth() - (doc.internal.pageSize.getWidth() / 2) - 40,doc.internal.pageSize.getHeight()-graphY-85,undefined,'FAST');
        }    

        nuevaPagina = true;
    });
    return doc;    
}

boletas.agrupada = function(){
    datos = arguments[0];
    nuevaPagina = false;
    var doc = new jsPDF({
        orientation: 'landscape',
        unit: 'pt',
        format:'letter'
    });
    console.log(datos);
    config = datos[6].resultados;

    datos[2].resultados.forEach(function(value,index){
        if (nuevaPagina){
            doc.addPage();
        }

        startX = 30;
        startY = 30;

        //Banner
        headerSrc = PropText(config,10,null);
        console.log(config);
        if (headerSrc != null) {
            headerImg = new Image();
            headerImg.src = headerSrc;
            doc.addImage(headerImg,'PNG',startX,startY-10,doc.internal.pageSize.getWidth()-60,180);
        }

        //LOGO del Edificio

        var logo = new Image();
        logo.src = PropText(config,9,'images/logos/logo%s.png'.format(datos[0].resultados[0].idedificio));
        doc.addImage(logo, 'PNG', startX,startY,148,76);

        //Informacion de la Empresa
        doc.setFontSize(10);
        doc.setFontStyle('normal');
        titleEdificio = PropText(config,18,datos[0].resultados[0].nombre);
        doc.text(titleEdificio, startX+10, startY+=10+76);

        viewRutIzquierdo = PropBoolean(config,21,1);
        if (viewRutIzquierdo) {
            doc.setFontStyle('bold');
            doc.text("RUT: ", startX+10, startY+=12);
            doc.setFontStyle('normal');
            doc.text(datos[0].resultados[0].rut, 12+startX+doc.getStringUnitWidth("RUT:")*doc.internal.getFontSize()/doc.internal.scaleFactor, startY);
        }
        //doc.text(datos[0].resultados[0].direccion, startX+10, startY+=12);
        //doc.text(data.edificio.email, startX, startY+=12);
        //doc.text(data.edificio.telf, startX, startY+=12);

        doc.setLineWidth(1.5);
        doc.rect(doc.internal.pageSize.getWidth()-200, 30, 160, 50);
        viewRutDerecho = PropBoolean(config,16,1);
        if (viewRutDerecho) {
            doc.centerText("RUT: "+datos[0].resultados[0].rut,"bold",160,doc.internal.pageSize.getWidth()-200,45);
        }

        tituloTipoBoleta = PropText(config,17,'BOLETA INFORMATIVA');

        doc.centerText(tituloTipoBoleta,"bold",160,doc.internal.pageSize.getWidth()-200,60);
        doc.centerText("AGRUPADA","bold",160,doc.internal.pageSize.getWidth()-200,75);
    
        colorClienteBox = PropColorRGB(config,12,"rgb(196,196,196)");
        doc.setFillColor(colorClienteBox[0],colorClienteBox[1],colorClienteBox[2]);
        doc.setDrawColor(colorClienteBox[0],colorClienteBox[1],colorClienteBox[2]);
        doc.rect(doc.internal.pageSize.getWidth()-200, 100, 80, 20, 'FD');
        ColorFontTitleNumCliente = PropColorRGB(config,13,"rgb(0,0,0)");
        doc.setTextColor(ColorFontTitleNumCliente[0],ColorFontTitleNumCliente[1],ColorFontTitleNumCliente[2]); 
        doc.centerText("N° Cliente:","bold",80,doc.internal.pageSize.getWidth()-200,113);
        doc.setDrawColor(colorClienteBox[0],colorClienteBox[1],colorClienteBox[2]);
        ColorFontValueNumCliente = PropColorRGB(config,14,"rgb(0,0,0)");
        doc.setFillColor(255);
        doc.setTextColor(ColorFontValueNumCliente[0],ColorFontValueNumCliente[1],ColorFontValueNumCliente[2]);
        doc.rect(doc.internal.pageSize.getWidth()-120, 100, 80, 20, 'FD')
        doc.centerText(datos[2].resultados[0].idconsumidor,"bold",80,doc.internal.pageSize.getWidth()-120,113);
        doc.setTextColor(0,0,0); 
        doc.centerText("Fecha Emisión:","bold",80,doc.internal.pageSize.getWidth()-200,135);
        doc.centerText(datos[1].resultados[0].fecha,"normal",80,doc.internal.pageSize.getWidth()-120,135);
    
        doc.setLineWidth(0.1)
        doc.setDrawColor(0, 0, 0);
    
        doc.setLineDash([1.4])
        doc.line(startX, 145, doc.internal.pageSize.getWidth()-30, 145);
        doc.line(startX, 200, doc.internal.pageSize.getWidth()-30, 200);

        doc.setFontSize(10);
        doc.
        setFontStyle('normal');
        startY = 165;
        doc.text("Sres. "+datos[2].resultados[0].nombre, startX+10, startY);  
        doc.setFontStyle('bold');
        doc.text("Dirección de Envio: ", startX+10, startY+=15);
        doc.setFontStyle('normal');
        doc.text(datos[2].resultados[0].direccion, startX+120, startY);
        doc.setFontStyle('bold');
        doc.text("RUT: ", startX+10, startY+=15);
        doc.setFontStyle('normal');
        doc.text(datos[2].resultados[0].rut, startX+70, startY);

        viewLogoDerecho = PropBoolean(config,19,0);
        if (viewLogoDerecho) {
            var logoDerecho = new Image();
            logoDerecho.src = PropText(config,20,'images/logos/logo%s.png'.format(datos[0].resultados[0].idedificio));
            doc.addImage(logoDerecho, 'PNG', doc.internal.pageSize.getWidth()-120,startY,80,20);            
        }

        ivacargos = (datos[1].resultados[0].ivacargos == 't');
        doc.setFontSize(16);
        doc.setFontSize(14);
        doc.setFontStyle('bold');
        doc.text("Total a Pagar", doc.internal.pageSize.getWidth()-250, startY+=25);
        doc.rightText("CLP "+formatear_valor(!(ivacargos)?(datos[5].totales.monto+(datos[5].totales.monto*0.19)):datos[5].totales.monto,'float8',true,0).value,"bold",doc.internal.pageSize.getWidth()-30, startY);
        doc.setFontSize(10);
        doc.text("Periodo:",doc.internal.pageSize.getWidth()-250, startY+15);
        doc.setFontSize(10);
        doc.setFontStyle('normal');
        doc.rightText("%s al %s".format(datos[1].resultados[0].desde,datos[1].resultados[0].hasta),"bold",doc.internal.pageSize.getWidth()-30, startY+15);

        header = [
            [{content: 'Información de Medidores', colSpan: 17, styles: {halign: 'center', fontSize:12}}],
            ['Boleta N°','','Medidor','','P. Cont(kW)','','Espacio','','L. Anterior(kWh)','','L. Actual(kWh)','','Dif(kWh)','','Cte(*)','','Consumo(kWh)']
        ],
        footer = [['','',{content:'Subtotales:',styles:{halign:'right'}},'',{content: formatear_valor(datos[3].totales.potencia,'float8',true,2).value, styles: {halign: 'right'}},'','','',{content: formatear_valor(datos[3].totales.energiainicial,'float8',true,2).value, styles: {halign: 'right'}},'',{content: formatear_valor(datos[3].totales.energiafinal,'float8',true,2).value, styles: {halign: 'right'}},'',{content: formatear_valor(datos[3].totales.diff,'float8',true,2).value, styles: {halign: 'right'}},'','','',{content: formatear_valor(datos[3].totales.consumo,'float8',true,2).value, styles: {halign: 'right'}}]];
        colorHeaderLecturas = PropColorRGB(config,6,'rgb(160,160,160)');    
        colorFooterLecturas = PropColorRGB(config,7,'rgb(160,160,160)');
        colorBodyLecturas = PropColorRGB(config,8,'rgb(190,190,190)');
        colorFontHeaderLecturas = PropColorRGB(config,22,'rgb(0,0,0)');
        colorFontFooterLecturas = PropColorRGB(config,22,'rgb(0,0,0)');

        doc.autoTable({
            startX:startX,
            startY: startY+=25,
            head: header,
            foot:footer,
            body: datos[3].resultados,
            styles: {cellPadding: 1, fontSize: 8},
            headStyles: {
                fillColor: colorHeaderLecturas,
                textColor: colorFontHeaderLecturas,
                fontSize: 8
            },
            columnStyles: [
                {halign:'center'},{},
                {halign:'center'},{},
                {halign:'right'},{},
                {},{},
                {halign:'right'},{},
                {halign:'right'},{},
                {halign:'right'},{},
                {halign:'center'},{},
                {halign:'right'}
            ],
            footStyles: {
                fillColor: colorFooterLecturas,
                textColor: colorFontFooterLecturas,
                fontSize: 8,
            },
            theme: 'plain'
        });          

        startY = doc.previousAutoTable.finalY+20;

        header = [
            [{content: 'Información de Cargos', colSpan: 7, styles: {halign: 'center', fontSize:12}}],
            ['Descripción','','Valor Unitario(CLP)','','Total Medido','','Cargo(CLP)']
        ];
        footer = [];

        if (!(ivacargos)){
            footer.push([{content:'Total (CLP):',colSpan:6,styles:{halign:'right'}},{content:formatear_valor(datos[5].totales.monto,'float8',true,0).value,styles:{halign:'right'}}]);
            footer.push([{content:'IVA (CLP):',colSpan:6,styles:{halign:'right'}},{content:formatear_valor(datos[5].totales.monto*0.19,'float8',true,0).value,styles:{halign:'right'}}]);
            footer.push([{content:'Total a Pagar (CLP):',colSpan:6,styles:{halign:'right'}},{content:formatear_valor(datos[5].totales.monto+(datos[5].totales.monto*0.19),'float8',true,0).value,styles:{halign:'right'}}]);    
        }
        else{
            footer.push([{content:'Total a Pagar (CLP):',colSpan:6,styles:{halign:'right'}},{content:formatear_valor(datos[5].totales.monto,'float8',true,0).value,styles:{halign:'right'}}]);
        }
        colorHeaderCargos = PropColorRGB(config,4,"rgb(162,193,205)");
        colorFooterCargos = PropColorRGB(config,5,"rgb(162,193,205)");
        colorFontHeaderCargos = PropColorRGB(config,23,'rgb(0,0,0)');
        colorFontFooterCargos = PropColorRGB(config,23,'rgb(0,0,0)');

        doc.autoTable({
            startX:startX,
            startY: startY,
            head: header,
            foot: footer,
            body: datos[5].resultados,
            styles: {cellPadding: 1, fontSize: 8},
            headStyles: {
                fillColor: colorHeaderCargos,
                textColor: colorFontHeaderCargos,
                fontSize: 8
            },
            columnStyles: [
                {halign:'left'},{},
                {halign:'right'},{},
                {halign:'right'},{},
                {halign:'right'},
            ],
            footStyles: {
                fillColor: colorFooterCargos,
                textColor: colorFontFooterCargos,
                fontSize: 8,
            },
            theme: 'plain',
        });  
        doc.setLineWidth(0.1)
        doc.setDrawColor(0, 0, 0);
    
        doc.setLineDash([1.4])
        doc.line(startX, doc.internal.pageSize.getHeight()-30, doc.internal.pageSize.getWidth()-30, doc.internal.pageSize.getHeight()-30);
        doc.setFontSize(6);
        doc.rightText('Generado por Ribex v1.2, propiedad de Ribé Ingeniería','normal',doc.internal.pageSize.getWidth()-30,doc.internal.pageSize.getHeight()-20);

        nuevaPagina = true;
    });

    return doc;   
}